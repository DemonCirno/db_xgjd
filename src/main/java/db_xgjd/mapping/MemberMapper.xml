<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="db_xgjd.dao.MemberMapper" >
  <resultMap id="BaseResultMap" type="db_xgjd.model.Member" >
    <id column="memberID" property="memberid" jdbcType="INTEGER" />
    <result column="memberSex" property="membersex" jdbcType="BIT" />
    <result column="memberName" property="membername" jdbcType="VARCHAR" />
    <result column="memberClass" property="memberclass" jdbcType="VARCHAR" />
    <result column="memebrStuID" property="memebrstuid" jdbcType="INTEGER" />
    <result column="subjects" property="subjects" jdbcType="VARCHAR" />
    <result column="contactway" property="contactway" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    memberID, memberSex, memberName, memberClass, memebrStuID, subjects, contactway
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_members
    where memberID = #{memberid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_members
    where memberID = #{memberid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="db_xgjd.model.Member" >
    insert into tb_members (memberID, memberSex, memberName, 
      memberClass, memebrStuID, subjects, 
      contactway)
    values (#{memberid,jdbcType=INTEGER}, #{membersex,jdbcType=BIT}, #{membername,jdbcType=VARCHAR}, 
      #{memberclass,jdbcType=VARCHAR}, #{memebrstuid,jdbcType=INTEGER}, #{subjects,jdbcType=VARCHAR}, 
      #{contactway,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="db_xgjd.model.Member" >
    insert into tb_members
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="memberid != null" >
        memberID,
      </if>
      <if test="membersex != null" >
        memberSex,
      </if>
      <if test="membername != null" >
        memberName,
      </if>
      <if test="memberclass != null" >
        memberClass,
      </if>
      <if test="memebrstuid != null" >
        memebrStuID,
      </if>
      <if test="subjects != null" >
        subjects,
      </if>
      <if test="contactway != null" >
        contactway,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="memberid != null" >
        #{memberid,jdbcType=INTEGER},
      </if>
      <if test="membersex != null" >
        #{membersex,jdbcType=BIT},
      </if>
      <if test="membername != null" >
        #{membername,jdbcType=VARCHAR},
      </if>
      <if test="memberclass != null" >
        #{memberclass,jdbcType=VARCHAR},
      </if>
      <if test="memebrstuid != null" >
        #{memebrstuid,jdbcType=INTEGER},
      </if>
      <if test="subjects != null" >
        #{subjects,jdbcType=VARCHAR},
      </if>
      <if test="contactway != null" >
        #{contactway,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="db_xgjd.model.Member" >
    update tb_members
    <set >
      <if test="membersex != null" >
        memberSex = #{membersex,jdbcType=BIT},
      </if>
      <if test="membername != null" >
        memberName = #{membername,jdbcType=VARCHAR},
      </if>
      <if test="memberclass != null" >
        memberClass = #{memberclass,jdbcType=VARCHAR},
      </if>
      <if test="memebrstuid != null" >
        memebrStuID = #{memebrstuid,jdbcType=INTEGER},
      </if>
      <if test="subjects != null" >
        subjects = #{subjects,jdbcType=VARCHAR},
      </if>
      <if test="contactway != null" >
        contactway = #{contactway,jdbcType=VARCHAR},
      </if>
    </set>
    where memberID = #{memberid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="db_xgjd.model.Member" >
    update tb_members
    set memberSex = #{membersex,jdbcType=BIT},
      memberName = #{membername,jdbcType=VARCHAR},
      memberClass = #{memberclass,jdbcType=VARCHAR},
      memebrStuID = #{memebrstuid,jdbcType=INTEGER},
      subjects = #{subjects,jdbcType=VARCHAR},
      contactway = #{contactway,jdbcType=VARCHAR}
    where memberID = #{memberid,jdbcType=INTEGER}
  </update>
</mapper>